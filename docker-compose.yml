services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: appdb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - appnet

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/appdb
      REDIS_URL: "redis://redis:6379/0"
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    command: npm run dev -- --host 0.0.0.0
    environment:
      - VITE_API_URL=http://api:8000
    depends_on:
      - backend
    user: node

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - appnet

  redis_exporter:
    image: oliver006/redis_exporter:v1.45.0
    command: ["redis_exporter", "--redis.addr", "redis://redis:6379"]
    ports:
      - "9121:9121"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - appnet

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    command: -nginx.scrape-uri http://nginx/stub_status
    depends_on:
      nginx:
        condition: service_healthy
    ports:
      - "9113:9113"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9113/metrics || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - appnet

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - backend
      - nginx_exporter

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  k6:
    image: grafana/k6:latest
    working_dir: /tests
    volumes:
      - ./backend/tests/load:/tests
    entrypoint: ["k6","run","--vus","100","--duration","5m","/tests/loadtest.js"]
    environment:
      BASE_URL: http://api:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - appnet
    profiles: ["load"]

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL:  admin@localhost.localdomain
      PGADMIN_DEFAULT_PASSWORD: secret
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./backend/pgadmin-config/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - postgres
    networks:
      - appnet

networks:
  appnet:

volumes:
  postgres_data:
  pgadmin_data: